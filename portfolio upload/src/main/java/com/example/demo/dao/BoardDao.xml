<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.BoardDao">
	<select id="getPagedList" parameterType="map"
		resultMap="article">
		SELECT A.*,
		M.name AS
		extra__writerName
		FROM article AS A
		LEFT JOIN
		`member` AS M
		ON
		A.memberId = M.id
		WHERE A.boardId=#{boardId}
		ORDER BY
		A.id DESC
		<if test="limitFrom != null and limitTake != null">
			LIMIT #{limitFrom}, #{limitTake}
		</if>
	</select>

	<insert id="write" parameterType="map" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO `article`
		SET regDate = NOW(),
		title = #{title},
		body = #{body},
		hit = 0,
		boardId = #{boardId},
		displayStatus = 1,
		memberId = #{memberId}
	</insert>

	<insert id="writeReply" parameterType="map"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `articleReply`
		SET
		regDate = NOW(),
		body = #{body},
		articleId = #{articleId},
		memberId =
		#{memberId}
	</insert>

	<update id="modify" parameterType="map">
		UPDATE `article`
		<set>
			<if test="title != null">title = #{title},</if>
			<if test="body != null">`body` = #{body},</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="modifyReply" parameterType="map">
		UPDATE `articleReply`
		<set>
			<if test="body != null">`body` = #{body},</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="increaseArticleHit">
		UPDATE `article`
		SET hit = hit + 1
		WHERE id = #{id}
	</update>

	<delete id="deleteArticle">
		DELETE
		FROM article
		WHERE id = #{articleId}
	</delete>

	<select id="getReply"
		resultType="com.example.demo.dto.ArticleReply">
		SELECT *
		FROM articleReply
		WHERE id = #{id}
	</select>

	<delete id="deleteReply">
		DELETE FROM articleReply
		WHERE id = #{id}
	</delete>

	<select id="findById" resultType="com.example.demo.dto.Board">
		SELECT *
		FROM board
		WHERE id =
		#{id}
	</select>

	<select id="findArticleById" resultMap="article">
		SELECT A.*,
		M.name AS
		extra__writerName
		FROM article AS A
		LEFT JOIN `member` AS M
		ON A.memberId
		= M.id
		WHERE A.id = #{articleId}
	</select>
	
	<select id="getCount" resultType="Integer">
		SELECT COUNT(*) AS cnt
		FROM
		article
		WHERE boardId=#{boardId}
	</select>

	<select id="getArticleList" parameterType="map"
		resultMap="article">
		SELECT A.*, M.name AS extra__writerName
		FROM article AS A
		LEFT JOIN `member` AS M
		ON A.memberId = M.id
		WHERE A.boardId =
		#{boardId}
		AND A.displayStatus = 1
		ORDER BY A.id DESC
	</select>

	<select id="getRepliesFrom" resultMap="articleReply">
		SELECT AR.*, M.name AS
		extra__writerName
		FROM articleReply AS AR
		LEFT JOIN `member` AS M
		ON
		AR.memberId = M.id
		WHERE AR.articleId = #{articleId}
		AND AR.id >=
		#{from}
		ORDER BY AR.id ASC
	</select>

	<resultMap type="com.example.demo.dto.Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="title" column="title" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="boardId" column="boardId" />
		<id property="hit" column="hit" />
		<id property="displayStatus" column="displayStatus" />
		<association property="extra" javaType="map">
			<id property="writerName" column="extra__writerName" />
		</association>
	</resultMap>

	<resultMap type="com.example.demo.dto.ArticleReply"
		id="articleReply">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<association property="extra" javaType="map">
			<id property="writerName" column="extra__writerName" />
		</association>
	</resultMap>
</mapper>
